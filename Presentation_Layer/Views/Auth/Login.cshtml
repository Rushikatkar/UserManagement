@model DAL.DTO.LoginDTO

@{
    ViewData["Title"] = "Login";
}

<h1 class="text-center text-primary">Login</h1>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5 shadow-lg p-4 rounded bg-light">
            <h4 class="text-center text-secondary">User Login</h4>
            <hr />

            @if (ViewData.ModelState.Any(x => x.Value.Errors.Count > 0))
            {
                <div class="alert alert-danger">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <form asp-controller="Auth" asp-action="Login" method="post" class="needs-validation" novalidate>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group mb-3">
                    <label asp-for="Username" class="form-label"></label>
                    <input asp-for="Username" type="text" class="form-control" placeholder="Enter Username" required />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" type="password" class="form-control" placeholder="Enter Password" required />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg">Login</button>
                </div>
            </form>

            <div class="text-center mt-3">
                <a asp-action="Register" class="text-decoration-none">Don't have an account? Register</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    document.querySelector("form").addEventListener("submit", function (event) {
        event.preventDefault();

        fetch("/Auth/Login", {
            method: "POST",
            body: new FormData(this)
        }).then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            } else {
                alert("Invalid login");
            }
        });
    });
</script>
